{"ast":null,"code":"var _jsxFileName = \"/Users/phong/Documents/Git/CODE/Trivia Questionnaire/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport he from \"he\";\nimport StartUp from \"./Components/StartUp\";\nimport Questions from \"./Components/Questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [start, setStart] = React.useState(false);\n  const [allQuestions, setAllQuestions] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=10\").then(res => res.json()).then(data => setAllQuestions(data.results));\n  }, []);\n  const quiz = allQuestions.map(question => /*#__PURE__*/_jsxDEV(Questions, { ...he.decode(question)\n  }, nanoid(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this));\n\n  function startQuiz() {\n    setStart(prev => !prev);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: start === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(StartUp, {\n        start: startQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"QUIZ!\", quiz]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ocvafS4jAw/xwxqJha6Y4Zh98Yo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/phong/Documents/Git/CODE/Trivia Questionnaire/src/App.js"],"names":["React","nanoid","he","StartUp","Questions","App","start","setStart","useState","allQuestions","setAllQuestions","useEffect","fetch","then","res","json","data","results","quiz","map","question","decode","startQuiz","prev"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAA1B;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAxC;AAGAR,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AAClBC,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIN,eAAe,CAACM,IAAI,CAACC,OAAN,CAFjC;AAGH,GAJD,EAIG,EAJH;AAMA,QAAMC,IAAI,GAAGT,YAAY,CAACU,GAAb,CAAiBC,QAAQ,iBAClC,QAAC,SAAD,OAEMlB,EAAE,CAACmB,MAAH,CAAUD,QAAV;AAFN,KACOnB,MAAM,EADb;AAAA;AAAA;AAAA;AAAA,UADS,CAAb;;AAOA,WAASqB,SAAT,GAAqB;AACnBf,IAAAA,QAAQ,CAACgB,IAAI,IAAI,CAACA,IAAV,CAAR;AACD;;AAED,sBACE;AAAA,cAEEjB,KAAK,KAAK,KAAV,gBAEA;AAAA,6BACA,QAAC,OAAD;AACE,QAAA,KAAK,EAAEgB;AADT;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA,gBAQA;AAAA,0BAECJ,IAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAzCuBb,G;;KAAAA,G","sourcesContent":["import React from \"react\"\nimport {nanoid} from \"nanoid\"\nimport he from \"he\"\nimport StartUp from \"./Components/StartUp\"\nimport Questions from \"./Components/Questions\"\n\n\nexport default function App() {\n  const [start, setStart] = React.useState(false)\n\n  const [allQuestions, setAllQuestions] = React.useState([])\n    \n    \n  React.useEffect(() => {\n      fetch(\"https://opentdb.com/api.php?amount=10\")\n          .then(res => res.json())\n          .then(data => setAllQuestions(data.results))\n  }, [])\n\n  const quiz = allQuestions.map(question => (\n      <Questions \n        key={nanoid()}\n        {...he.decode(question)}\n      />\n  ))\n\n  function startQuiz() {\n    setStart(prev => !prev)\n  }\n\n  return (\n    <div>\n    {\n      start === false \n      ?\n      <div> \n      <StartUp \n        start={startQuiz}\n      />\n      </div>\n      :\n      <div>\n        QUIZ!\n      {quiz}\n      </div>\n    }\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}